Index: src/main/java/org/PUJ/Control/ControlDespacho.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.PUJ.Control;\r\n\r\nimport org.PUJ.Model.*;\r\n\r\nimport java.text.ParseException;\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.*;\r\n\r\npublic class ControlDespacho {\r\n\r\n    private GestionProductos gestionProductos = new GestionProductos();\r\n    private ArrayList<Pedido> pedidos = new ArrayList<>();\r\n    private GestionCliente gestionCliente = new GestionCliente();\r\n\r\n    public ArrayList<Pedido> getPedidos() {\r\n        return pedidos;\r\n    }\r\n\r\n    public GestionCliente getGestionCliente() {\r\n        return gestionCliente;\r\n    }\r\n\r\n    public GestionProductos getGestionProductos() {\r\n        return gestionProductos;\r\n    }\r\n\r\n    public Pedido ExistePedido(Cliente cliente, Producto producto, Calendar fecha) {\r\n        for (Pedido pedidotemp : this.pedidos) {\r\n            if (pedidotemp.getProductoSolicitado().equals(producto) && pedidotemp.getSolicitante().equals(cliente) && pedidotemp.getFechaRecibido().equals(fecha)) {\r\n                return pedidotemp;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public Pedido ExistePedido(UUID id) {\r\n        for (Pedido pedidotemp : this.pedidos) {\r\n            if (pedidotemp.getNumeroPedido().equals(id)){\r\n                return pedidotemp;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public void ReservarPedido(Pedido nuevopedido) {\r\n\r\n        long costoPedido = 0;\r\n        costoPedido += nuevopedido.getProductoSolicitado().calcularPrecio() + nuevopedido.getProductoSolicitado().getIva();\r\n\r\n        for (ServicioAdicional servtemp : nuevopedido.getServiciosAdicionales()) {\r\n            costoPedido += servtemp.calcularPrecio();\r\n        }\r\n        costoPedido += costoPedido * 0.10;\r\n\r\n        if (nuevopedido.getProductoSolicitado().getIva() > 50000) {\r\n            costoPedido += 8000;\r\n        }\r\n        nuevopedido.setPagado(true);\r\n        System.out.println(\"\\n\\t___Costo de Pedido___\\n\");\r\n        System.out.println(\"\\tPrecio Producto: $\" + nuevopedido.getProductoSolicitado().calcularPrecio());\r\n        System.out.println(\"\\tPrecio Iva producto: $\" + nuevopedido.getProductoSolicitado().getIva());\r\n        for (ServicioAdicional servtemp : nuevopedido.getServiciosAdicionales()) {\r\n            System.out.println(\"\\tServicio adicional: \" + servtemp.getNombreServicio());\r\n            System.out.println(\"\\tPrecio servicio adicional: $\" + servtemp.calcularPrecio());\r\n        }\r\n        if (nuevopedido.getProductoSolicitado().getIva() > 50000) {\r\n            System.out.println(\"\\tPrecio Iva Adicional: $ 8000\");\r\n        }\r\n        System.out.println(\"\\tCosto de despacho: $\" + costoPedido * 0.10);\r\n        System.out.println(\"\\tCosto total: $\" + costoPedido);\r\n    }\r\n\r\n    public void ModificarPedido(UUID id) {\r\n        Pedido pedidoModificar = ExistePedido(id);\r\n        Scanner in = new Scanner(System.in);\r\n        System.out.println(\"\\tSeleccione el aspecto a modificar del pedido\");\r\n        System.out.println(\"\\t1. Fecha de pedido\");\r\n        System.out.println(\"\\t2. Pago de pedido\");\r\n        System.out.println(\"\\t3. Nombre del repartidor\");\r\n        int opcion = in.nextInt();\r\n        switch (opcion) {\r\n            case 1:\r\n                SimpleDateFormat Fecha = new SimpleDateFormat(\"dd/MM/yyyy\");\r\n                System.out.println(\"\\tDigite la  nueva fecha en la cual desea despachar el pedido en formato dd/MM/yyyy\");\r\n                String fechain = in.next();\r\n                Calendar fechaDespacho = Calendar.getInstance();\r\n\r\n                try {\r\n                    Date fechaDate = Fecha.parse(fechain);\r\n                    fechaDespacho.setTime(fechaDate);\r\n                } catch (ParseException e) {\r\n                    e.printStackTrace();\r\n                }\r\n\r\n                //resta de la fecha actual con la fecha de despacho\r\n                Calendar fechanow = Calendar.getInstance();\r\n                long finMs = fechanow.getTimeInMillis();\r\n                long inicioMs = fechaDespacho.getTimeInMillis();\r\n                int dias = (int) (Math.abs(finMs - inicioMs) / (1000 * 60 * 60 * 24));\r\n\r\n                System.out.println(dias);\r\n                if (dias <= 2) {\r\n                    System.out.println(\"\\t [!] Ups.. el pedido lo debes hacer 2 dias antes de la fecha de entrega \\n\\t No se ha modificado tu pedido, vuelve a intentarlo\");\r\n                } else {\r\n                    if (ExistePedido(pedidoModificar.getSolicitante(), pedidoModificar.getProductoSolicitado(), fechaDespacho) == null) {\r\n                        pedidoModificar.setFechaRecibido(fechaDespacho);\r\n                    }\r\n                    else {\r\n                        System.out.println(\"\\t [!] El pedido ya existe en esta fecha\");\r\n                        System.out.println(\"\\tDesea crear el mismo pedido con una nueva fecha ?\");\r\n                        System.out.println(\"\\tS. si\");\r\n                        System.out.println(\"\\tN. NO\");\r\n                        char op = in.next().charAt(0);\r\n\r\n                        if (op == 'S') {\r\n                            System.out.println(\"\\tDigite la fecha en la cual desea despachar el pedido en formato dd/MM/yyyy\");\r\n                            fechain = in.next();\r\n                            try {\r\n                                Date fechaDate = Fecha.parse(fechain);\r\n                                fechaDespacho.setTime(fechaDate);\r\n                            } catch (ParseException e) {\r\n                                e.printStackTrace();\r\n                            }\r\n                            if (dias <= 2) {\r\n                                System.out.println(\"\\t [!] Ups.. el pedido lo debes hacer 2 dias antes de la fecha de entrega\");\r\n                            }\r\n                            else{\r\n                                if (ExistePedido(pedidoModificar.getSolicitante(), pedidoModificar.getProductoSolicitado(), fechaDespacho) == null) {\r\n                                    pedidoModificar.setFechaRecibido(fechaDespacho);\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                break;\r\n            case 2:\r\n                if (pedidoModificar.getPagado()) {\r\n                    System.out.println(\"\\t Desea cambiar que no este pago ?\");\r\n                    System.out.println(\"\\t1. Si\");\r\n                    System.out.println(\"\\t1. NO\");\r\n                    char op = in.next().charAt(0);\r\n                    if (op == 's') {\r\n                        pedidoModificar.setPagado(false);\r\n                    }\r\n                } else {\r\n                    System.out.println(\"\\t Desea cambiar que este pago ?\");\r\n                    System.out.println(\"\\t1. Si\");\r\n                    System.out.println(\"\\t1. NO\");\r\n                    char op = in.next().charAt(0);\r\n                    if (op == 's') {\r\n                        pedidoModificar.setPagado(true);\r\n                    }\r\n                }\r\n                break;\r\n            case 3:\r\n                System.out.println(\"\\tDigite el  nuevo nombre el repartidor\");\r\n                String repartidor = in.next();\r\n                pedidoModificar.setNombreRepartidor(repartidor);\r\n                break;\r\n        }\r\n    }\r\n\r\n    public void EliminarPedido(UUID eliminar){\r\n        boolean ver = true;\r\n        char Confi = 'j';\r\n        Scanner c = new Scanner(System.in);\r\n        for(Pedido p: pedidos){\r\n            if(p.getNumeroPedido().equals(eliminar)){\r\n                ver = false;\r\n                System.out.println(\"Esta seguro que desea eliminar el pedido? : \"+p.toString());\r\n                System.out.println(\"S = si, N = no\");\r\n                Confi = c.next().charAt(0);\r\n                if(Confi == 'S'){\r\n                    pedidos.remove(p);\r\n                    System.out.println(\"\\tPEDIDO ELIMINADO CON EXITO\");\r\n                }\r\n                break;\r\n            }\r\n        }\r\n        if(ver && Confi!='N')\r\n            System.out.println(\"\\t[!] EL PEDIDO QUE DESEA ELIMINAR NO EXISTE \");\r\n    }\r\n\r\n    public void VerPedido(){\r\n        if(pedidos.isEmpty())\r\n            System.out.println(\"[!] NO EXISTEN PEDIDOS\");\r\n        else\r\n            System.out.println(pedidos.toString());\r\n    }\r\n\r\n    public boolean verListadoDePedidosDeProductoYFechaEspecÃ­fica(UUID idProd2,Calendar fecha) {\r\n        boolean hayPedido = false;\r\n            ArrayList<Pedido> pedidosProductoFecha = new ArrayList<>();\r\n            for (Pedido auxPedido : pedidos) {\r\n                if (auxPedido.getProductoSolicitado().getProdId().equals(idProd2) && fecha.after(auxPedido.getFechaRecibido())) {\r\n                    pedidosProductoFecha.add(auxPedido);\r\n                    hayPedido = true;\r\n                }\r\n            }\r\n            if (!hayPedido) {\r\n                System.out.println(\"\\tNo se encontraron pedidos para el producto especificado posteriores la fecha especificada\");\r\n            } else {\r\n                System.out.println(pedidosProductoFecha.toString());\r\n            }\r\n        return hayPedido;\r\n    }\r\n\r\n    public double precioPedidosDeAseoPorTipo(TipoProducto tipoABuscar){\r\n        Double precio = 0.0;\r\n        for (Pedido pedtemp : this.pedidos){\r\n            if (pedtemp.getProductoSolicitado() instanceof Aseo){\r\n                if (((Aseo) pedtemp.getProductoSolicitado()).getTipo() == tipoABuscar){\r\n                    precio += ((Aseo) pedtemp.getProductoSolicitado()).calcularPrecio();\r\n                }\r\n            }\r\n        }\r\n        return precio;\r\n    }\r\n    public ArrayList <ServicioAdicional> VerEnvioPrimeConTipoEnPedido (UUID idpedido, TipoTransporte tipo){\r\n        Pedido pedidover = this.ExistePedido(idpedido);\r\n        ArrayList<ServicioAdicional> listatemp = pedidover.enviosPrimePorTipo(tipo);\r\n        return listatemp;\r\n    }\r\n    public boolean validarCliente(Long ced){\r\n        for(Pedido p: this.pedidos){\r\n            if(p.getSolicitante().getCedula().equals(ced))\r\n                return false;\r\n        }\r\n        return true;\r\n    }\r\n    public boolean ValidarProducto(Producto product){\r\n        for(Pedido ped: this.pedidos){\r\n            if(ped.getProductoSolicitado().equals(product))\r\n                return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public Map<UUID,Producto> verProductosTipoFruver() {\r\n        Map<UUID, Producto> productosFruver = new HashMap<>();\r\n        for (Producto prod : this.getGestionProductos().getListaProductos().values()) {\r\n            if (prod instanceof Fruver) {\r\n                productosFruver.put(prod.getProdId(), prod);\r\n            }\r\n        }\r\n        return productosFruver;\r\n    }\r\n\r\n    public ArrayList<Pedido> verPedidosAsociadosAProductosAseo(){\r\n        ArrayList<Pedido> pedidosProductosAseo=new ArrayList<>();\r\n        for(Pedido ped: this.getPedidos()){\r\n            if(ped.getProductoSolicitado() instanceof Aseo){\r\n                pedidosProductosAseo.add(ped);\r\n            }\r\n        }\r\n        return pedidosProductosAseo;\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/PUJ/Control/ControlDespacho.java b/src/main/java/org/PUJ/Control/ControlDespacho.java
--- a/src/main/java/org/PUJ/Control/ControlDespacho.java	
+++ b/src/main/java/org/PUJ/Control/ControlDespacho.java	
@@ -192,7 +192,7 @@
         boolean hayPedido = false;
             ArrayList<Pedido> pedidosProductoFecha = new ArrayList<>();
             for (Pedido auxPedido : pedidos) {
-                if (auxPedido.getProductoSolicitado().getProdId().equals(idProd2) && fecha.after(auxPedido.getFechaRecibido())) {
+                if (auxPedido.getProductoSolicitado().getProdId().equals(idProd2) && ((fecha.before(auxPedido.getFechaRecibido()))||(fecha.compareTo(auxPedido.getFechaRecibido())==0))) {
                     pedidosProductoFecha.add(auxPedido);
                     hayPedido = true;
                 }
Index: src/main/java/org/PUJ/View/PantallaDespacho.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.PUJ.View;\r\n\r\nimport org.PUJ.Control.ControlDespacho;\r\nimport org.PUJ.Model.*;\r\n\r\nimport java.text.ParseException;\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.*;\r\n\r\npublic class PantallaDespacho {\r\n    private ControlDespacho centralDespacho = new ControlDespacho();\r\n\r\n    public static void main(String[] args) {\r\n\r\n        PantallaDespacho pantalla = new PantallaDespacho();\r\n        //Objetos\r\n        Cliente cliente1 = new Cliente(1000077617L, \"Nicolas David\", 316009L, \"BG 6447\");\r\n        Cliente cliente2 = new Cliente(1000444324L, \"Santiago Gutierrez\", 951233L, \"SS 1234\");\r\n        Cliente cliente3 = new Cliente(2106226983L, \"Daniel Barreto\", 443253L, \"DD 5678\");\r\n        Cliente cliente4 = new Cliente(1555345340L, \"William Martinez\", 664323L, \"LL 4432\");\r\n        Cliente cliente5 = new Cliente(9931183443L, \"Jose Diaz\", 221453L, \"CL 2224\");\r\n        // 3 de cada uno: Productos - Fruver, aseo, otros\r\n        Producto producto1 = new Producto(\"Papas fritas\", 2500d, \"La esquina\");\r\n        Producto producto2 = new Producto(\"Yogurt con fresa\", 3500d, \"La esquina\");\r\n        Producto producto3 = new Producto(\"Doritos\", 4000d, \"La otra esquina\");\r\n\r\n        Aseo productoAseo1 = new Aseo(\"Escoba\", 4500D, \"la esquina\", \"Dersa\", TipoProducto.HOGAR, true);\r\n        Aseo productoAseo2 = new Aseo(\"Trapero\", 7000D, \"la esquina\", \"Dersa\", TipoProducto.HOGAR, false);\r\n        Aseo productoAseo3 = new Aseo(\"Desengrasante\", 12000d, \"los arboles\", \"Wd-40\", TipoProducto.INDUSTRIAL, true);\r\n\r\n        Fruver productoFruver1 = new Fruver(\"Manzana\", 400D, \"los arboles\", 0d, \"Napoles\");\r\n        Fruver productoFruver2 = new Fruver(\"Huevos\", 1800D, \"Justo y bueno\", 0d, \"Napoles\");\r\n        Fruver productoFruver3 = new Fruver(\"Arverja\", 3000D, \"los arboles\", 0d, \"Quintana\");\r\n        // 1 pedido sin servicio adicional\r\n        Pedido pedido1 = new Pedido(Calendar.getInstance(), \"Camilo\", cliente2, producto1);\r\n        // 5 pedidos con servicios adicionales\r\n        // - Dos con envio prime y uno con bonoregalo.\r\n        Pedido pedido2 = new Pedido(Calendar.getInstance(), \"Juan\", cliente1, producto1);\r\n        Pedido pedido3 = new Pedido(Calendar.getInstance(), \"Miguel\", cliente3, producto3);\r\n        Pedido pedido4 = new Pedido(Calendar.getInstance(), \"Nicolas\", cliente5, productoAseo1);\r\n        Pedido pedido5 = new Pedido(Calendar.getInstance(), \"Sofia\", cliente5, productoFruver1);\r\n        Pedido pedido6 = new Pedido(Calendar.getInstance(), \"Sara\", cliente4, productoAseo3);\r\n\r\n        pantalla.getCentralDespacho().getGestionCliente().getListaClientes().put(cliente1.getCedula(),cliente1);\r\n        pantalla.getCentralDespacho().getGestionCliente().getListaClientes().put(cliente2.getCedula(),cliente2);\r\n        pantalla.getCentralDespacho().getGestionCliente().getListaClientes().put(cliente3.getCedula(),cliente3);\r\n        pantalla.getCentralDespacho().getGestionCliente().getListaClientes().put(cliente4.getCedula(),cliente4);\r\n        pantalla.getCentralDespacho().getGestionCliente().getListaClientes().put(cliente5.getCedula(),cliente5);\r\n\r\n        pantalla.getCentralDespacho().getGestionProductos().getListaProductos().put(producto1.getProdId(),producto1);\r\n        pantalla.getCentralDespacho().getGestionProductos().getListaProductos().put(producto2.getProdId(),producto2);\r\n        pantalla.getCentralDespacho().getGestionProductos().getListaProductos().put(producto3.getProdId(),producto3);\r\n        pantalla.getCentralDespacho().getGestionProductos().getListaProductos().put(productoAseo1.getProdId(),productoAseo1);\r\n        pantalla.getCentralDespacho().getGestionProductos().getListaProductos().put(productoAseo2.getProdId(),productoAseo2);\r\n        pantalla.getCentralDespacho().getGestionProductos().getListaProductos().put(productoAseo3.getProdId(),productoAseo3);\r\n        pantalla.getCentralDespacho().getGestionProductos().getListaProductos().put(productoFruver1.getProdId(),productoFruver1);\r\n        pantalla.getCentralDespacho().getGestionProductos().getListaProductos().put(productoFruver2.getProdId(),productoFruver2);\r\n        pantalla.getCentralDespacho().getGestionProductos().getListaProductos().put(productoFruver3.getProdId(),productoFruver3);\r\n\r\n        pantalla.getCentralDespacho().getPedidos().add(pedido1);\r\n        pantalla.getCentralDespacho().getPedidos().add(pedido2);\r\n        pantalla.getCentralDespacho().getPedidos().add(pedido3);\r\n        pantalla.getCentralDespacho().getPedidos().add(pedido4);\r\n        pantalla.getCentralDespacho().getPedidos().add(pedido5);\r\n        pantalla.getCentralDespacho().getPedidos().add(pedido6);\r\n\r\n        //Fin objetos\r\n\r\n        int opcion = 0;\r\n        Scanner in = new Scanner(System.in);\r\n\r\n        do {\r\n            System.out.println(\"\\n\\t______Oficina de una agencia de reparto de Productos______\\n\");\r\n            System.out.println(\"\\t1.  Ver Lista de Productos\");\r\n            System.out.println(\"\\t2.  Insertar Productos\");\r\n            System.out.println(\"\\t3.  Modificar Productos\");\r\n            System.out.println(\"\\t4.  Eliminar Productos\");\r\n            System.out.println(\"\\t5.  Ver listado de Clientes registrados en el sistema\");\r\n            System.out.println(\"\\t6.  Insertar Cliente\");\r\n            System.out.println(\"\\t7.  Modificar datos de Cliente\");\r\n            System.out.println(\"\\t8.  Eliminar un Cliente\");\r\n            System.out.println(\"\\t9.  Realizar el Pedido de un Producto\");\r\n            System.out.println(\"\\t10. Modificar un Pedido de un Producto\");\r\n            System.out.println(\"\\t11. Eliminar un Pedido de un Producto\");\r\n            System.out.println(\"\\t12. Ver listado de Pedidos existentes\");\r\n            System.out.println(\"\\t13. Ver listado de Pedidos existentes de Producto y fecha especÃ­fica\");\r\n            System.out.println(\"\\t14. Ver listado de envios prime y tipo de un pedido\");\r\n            System.out.println(\"\\t15. Ver listado de productos de tipo Fruver\");\r\n            System.out.println(\"\\t16. Ver listado de pedidos asociados a productos de aseo\");\r\n            System.out.println(\"\\t17. Calcular precio de pedidos de tipo aseo en un producto en especifico\");\r\n            System.out.println(\"\\t0. Salir\");\r\n            System.out.print(\"\\tOpcion: \");\r\n            opcion = in.nextInt();\r\n            boolean valido = false;\r\n\r\n            switch (opcion) {\r\n                case 1:\r\n                    pantalla.centralDespacho.getGestionProductos().verListadoDeProductos();\r\n                    break;\r\n                case 2:\r\n                    System.out.println(\"\\t\\t[!] Insertar un producto\");\r\n                    System.out.println(\"\\t -> Â¿QuÃ© tipo de producto es?\");\r\n                    System.out.println(\"\\t [1] Aseo\\t[2] Fruver\\t[3] Otro\");\r\n                    Integer tipoProducto = pantalla.leerEntero();\r\n                    System.out.print(\"\\t-> Ingrese el nombre del producto: \");\r\n                    String nombreProducto = pantalla.leerString();\r\n                    System.out.print(\"\\t-> Ingrese el precio del producto: \");\r\n                    Double precioProducto = pantalla.leerDouble();\r\n                    System.out.print(\"\\t-> Ingrese el nombre de la tienda: \");\r\n                    String nombreTienda = pantalla.leerString();\r\n                    switch (tipoProducto) {\r\n                        case 1: // Aseo\r\n                            System.out.println(\"\\t\\t---- Datos de producto de Aseo ----\");\r\n                            System.out.print(\"\\t-> Ingrese el nombre de la empresa del producto: \");\r\n                            String nombreEmpresa = pantalla.leerString();\r\n                            System.out.print(\"\\t-> Â¿El producto tiene invima? S/N: \");\r\n                            String tieneInv = \"\";\r\n                            Boolean tieneInvima = false;\r\n                            do {\r\n                                tieneInv = in.next();\r\n                                if ((tieneInv).toUpperCase().equals(\"S\")) {\r\n                                    tieneInvima = true;\r\n                                    valido = true;\r\n                                } else if ((tieneInv).toUpperCase().equals(\"N\")) {\r\n                                    valido = true;\r\n                                }\r\n                            } while (!valido);\r\n                            System.out.println(\"\\t-> Â¿QuÃ© tipo de producto de aseo es?\");\r\n                            System.out.println(\"\\t-> [1] Hogar \\t[2] Industrial \\t[3] Hospitalario\");\r\n                            Integer tipoProductoAseoSc = pantalla.leerEntero();\r\n                            TipoProducto tipoProductoAseo = null;\r\n                            switch (tipoProductoAseoSc) {\r\n                                case 1:\r\n                                    tipoProductoAseo = TipoProducto.HOGAR;\r\n                                    break;\r\n                                case 2:\r\n                                    tipoProductoAseo = TipoProducto.INDUSTRIAL;\r\n                                    break;\r\n                                case 3:\r\n                                    tipoProductoAseo = TipoProducto.HOSPITALARIO;\r\n                                    break;\r\n                            }\r\n                            Aseo nuevoProductoAseo = new Aseo(nombreProducto, precioProducto, nombreTienda, nombreEmpresa, tipoProductoAseo, tieneInvima);\r\n                            pantalla.centralDespacho.getGestionProductos().insertarProducto(nuevoProductoAseo);\r\n                            break;\r\n                        case 2: // Fruver\r\n                            System.out.println(\"\\t\\t---- Datos de producto de Fruver ----\");\r\n                            System.out.print(\"\\t-> Ingrese el impuesto local del producto: \");\r\n                            Double impuestoLocal = pantalla.leerDouble();\r\n                            System.out.print(\"\\t-> Ingrese el nombre de la hacienda del producto: \");\r\n                            String nombreHacienda = pantalla.leerString();\r\n                            Fruver nuevoProductoFruver = new Fruver(nombreProducto, precioProducto, nombreTienda, impuestoLocal, nombreHacienda);\r\n                            pantalla.centralDespacho.getGestionProductos().insertarProducto(nuevoProductoFruver);\r\n                            break;\r\n                        case 3: // Otro\r\n                            Producto nuevoProducto = new Producto(nombreProducto, precioProducto, nombreTienda);\r\n                            pantalla.centralDespacho.getGestionProductos().insertarProducto(nuevoProducto);\r\n                            break;\r\n                    }\r\n                    break;\r\n\r\n                case 3:\r\n                    System.out.println(\"\\n\\tDigite el ID del producto que desea modificar: \");\r\n                    UUID productId = UUID.fromString(in.next());\r\n                    pantalla.centralDespacho.getGestionProductos().modificarProducto(productId);\r\n                    break;\r\n                case 4:\r\n                    System.out.println(\"\\t\\t[!] Eliminar un producto.\");\r\n                    System.out.print(\"\\t-> Digite el ID del producto que desea eliminar: \");\r\n                    in.nextLine();\r\n                    UUID keyEliminar = null;\r\n                    valido = false;\r\n                    if (!pantalla.centralDespacho.ValidarProducto(pantalla.centralDespacho.getGestionProductos().getListaProductos().get(keyEliminar))) {\r\n                        pantalla.centralDespacho.getGestionProductos().eliminarProducto(keyEliminar);\r\n                    } else {\r\n                        System.out.println(\"\\t[!] Error. El producto estÃ¡ asociado a un pedido, no se puede eliminar.\");\r\n                    }\r\n                    break;\r\n                case 5:\r\n                    pantalla.centralDespacho.getGestionCliente().VerlistadoClientes();\r\n                    break;\r\n                case 6:\r\n                    Boolean ver = false;\r\n                    System.out.println(\"\\tInsertar Cliente: \");\r\n                    System.out.print(\"\\tIngrese el Nombre completo del nuevo cliente: \");\r\n                    in.nextLine();\r\n                    String nombre = in.nextLine();\r\n                    System.out.print(\"\\tIngrese la cedula de \" + nombre + \" :\");\r\n                    Long ced = 0l;\r\n                    do {\r\n                        try {\r\n                            ced = in.nextLong();\r\n                            ver = true;\r\n                        } catch (Exception e) {\r\n                            in.next();\r\n                            System.out.println(\"\\t[!] Ingrese un valor numerico.\");\r\n\r\n                        }\r\n                    } while (!ver);\r\n                    System.out.print(\"\\tIngrese el telefono de contacto de \" + nombre + \" :\");\r\n                    Long tel = 0l;\r\n                    ver = false;\r\n                    do {\r\n                        try {\r\n                            tel = in.nextLong();\r\n                            ver = true;\r\n                        } catch (Exception e) {\r\n                            in.next();\r\n                            System.out.println(\"\\t[!] Ingrese un valor numerico.\");\r\n\r\n                        }\r\n                    } while (!ver);\r\n                    in.nextLine();\r\n                    System.out.print(\"\\tIngrese la direccion de \" + nombre + \" :\");\r\n                    String dir = in.nextLine();\r\n                    pantalla.centralDespacho.getGestionCliente().InsertarCliente(ced, nombre, tel, dir);\r\n                    break;\r\n                case 7:\r\n                    System.out.println(\"\\n\\tDigite la Identificacion del Cliente que desea modificar: \");\r\n                    long cedula;\r\n                    cedula = in.nextLong();\r\n                    pantalla.centralDespacho.getGestionCliente().modificarDatosCliente(cedula);\r\n                    break;\r\n                case 8:\r\n                    System.out.println(\"\\tIngrese el numero de cedula del cliente que deseas eliminar.\");\r\n                    Long cedulaE = 0l;\r\n                    ver = false;\r\n                    do {\r\n                        try {\r\n                            cedulaE = in.nextLong();\r\n                            ver = true;\r\n                        } catch (Exception e) {\r\n                            in.next();\r\n                            System.out.println(\"\\t[!]Ingrese un valor numerico.\");\r\n                        }\r\n                    } while (!ver);\r\n                    if (pantalla.centralDespacho.validarCliente(cedulaE))\r\n                        pantalla.centralDespacho.getGestionCliente().EliminarCliente(cedulaE);\r\n                    else System.out.println(\"\\t[!]El cliente esta asociado a un Pedido\");\r\n                    break;\r\n                case 9:\r\n                    System.out.println(\"\\n\\tInserte el codigo del producto\");\r\n                    UUID idProd = pantalla.leerUUID();\r\n                    System.out.println(\"\\tInserte el documento del cliente\");\r\n                    Long cedulaCliente = in.nextLong();\r\n\r\n                    if (pantalla.centralDespacho.getGestionCliente().existeCliente(cedulaCliente) != null && pantalla.centralDespacho.getGestionProductos().existeProducto(idProd) != null) {\r\n                        SimpleDateFormat Fecha = new SimpleDateFormat(\"dd/MM/yyyy\");\r\n                        System.out.println(\"\\t______Informacion Pedido________\");\r\n                        System.out.println(\"\\tDigite el nombre el repartidor\");\r\n                        String repartidor = pantalla.leerString();\r\n                        System.out.println(\"\\tDigite la fecha en la cual desea despachar el pedido en formato dd/MM/yyyy\");\r\n                        String fechain = in.next();\r\n                        Cliente clientePedido = pantalla.centralDespacho.getGestionCliente().existeCliente(cedulaCliente);\r\n                        Producto ProductoPedido = pantalla.centralDespacho.getGestionProductos().existeProducto(idProd);\r\n                        Calendar fechaDespacho = Calendar.getInstance();\r\n\r\n                        try {\r\n                            Date fechaDate = Fecha.parse(fechain);\r\n                            fechaDespacho.setTime(fechaDate);\r\n                        } catch (ParseException e) {\r\n                            e.printStackTrace();\r\n                        }\r\n                        //resta de la fecha actual con la fecha de despacho\r\n                        Calendar fechanow = Calendar.getInstance();\r\n                        long finMs = fechanow.getTimeInMillis();\r\n                        long inicioMs = fechaDespacho.getTimeInMillis();\r\n                        int dias = (int) (Math.abs(finMs - inicioMs) / (1000 * 60 * 60 * 24));\r\n                        if (dias <= 2) {\r\n                            System.out.println(\"\\t [!] Ups.. el pedido lo debes hacer 2 dias antes de la fecha de entrega \\n\\t No se ha realizado tu pedido, vuelve a intentarlo\");\r\n                        }\r\n                        else {\r\n                            while (pantalla.centralDespacho.ExistePedido(clientePedido, ProductoPedido, fechaDespacho) != null) {\r\n                                System.out.println(\"\\t [!] El pedido ya existe en esta fecha\");\r\n                                System.out.println(\"\\tDesea crear el mismo pedido con una nueva fecha ?\");\r\n                                System.out.println(\"\\tS. si\");\r\n                                System.out.println(\"\\tN. NO\");\r\n                                opcion = in.next().charAt(0);\r\n\r\n                                if (opcion == 'S') {\r\n                                    System.out.println(\"\\tDigite la fecha en la cual desea despachar el pedido en formato dd/MM/yyyy\");\r\n                                    fechain = in.next();\r\n                                    try {\r\n                                        Date fechaDate = Fecha.parse(fechain);\r\n                                        fechaDespacho.setTime(fechaDate);\r\n                                    } catch (ParseException e) {\r\n                                        e.printStackTrace();\r\n                                    }\r\n                                    if (dias <= 2) {\r\n                                        System.out.println(\"\\t [!] Ups.. el pedido lo debes hacer 2 dias antes de la fecha de entrega\");\r\n                                    }\r\n                                }\r\n                            }\r\n                            ArrayList<ServicioAdicional> servicios = new ArrayList<>();\r\n                            do {\r\n                                System.out.println(\"\\tDesea incluir servicion adicionales ?\");\r\n                                System.out.println(\"\\tS. si\");\r\n                                System.out.println(\"\\tN. NO\");\r\n                                opcion = in.next().charAt(0);\r\n\r\n                                if (opcion == 'S') {\r\n                                    int opcionservicio;\r\n                                    System.out.println(\"\\tCual de los servicios adicionales desea aÃ±adir\");\r\n                                    System.out.println(\"\\t1. Bono Regalo\");\r\n                                    System.out.println(\"\\t2. Envio Prime\");\r\n                                    opcionservicio = pantalla.leerEntero();\r\n                                    if (opcionservicio == 1) {\r\n                                        System.out.print(\"\\tDefine el Precio\\n\");\r\n                                        int precio = pantalla.leerEntero();\r\n                                        System.out.print(\"\\tDefine su comercio asociado: \");\r\n                                        String comercio = pantalla.leerString();\r\n                                        System.out.print(\"\\tDefine tu mensaje personalizado: \");\r\n                                        String mensaje = pantalla.leerString();\r\n                                        Calendar fechaservicio = (Calendar) fechaDespacho.clone();\r\n                                        fechaservicio.set(Calendar.MONTH, fechaservicio.get(Calendar.MONTH) + 6);\r\n                                        BonoRegalo bonotemp = new BonoRegalo(\"Bono regalo\", (double) precio, comercio, mensaje, fechaservicio);\r\n                                        servicios.add(bonotemp);\r\n                                    }\r\n                                    else {\r\n                                        System.out.println(\"\\tDefine el Precio\");\r\n                                        int precio = in.nextInt();\r\n                                        System.out.println(\"\\tInserte la distancia de su envio\");\r\n                                        Double distancia = in.nextDouble();\r\n                                        System.out.println(\"\\tTenemos varios tipos de transporte elige el que mas prefieras\");\r\n                                        System.out.println(\"\\t1. Bicicleta\");\r\n                                        System.out.println(\"\\t2. Moto\");\r\n                                        System.out.println(\"\\t3. Minivan\");\r\n                                        int op = in.nextInt();\r\n                                        TipoTransporte tipo;\r\n                                        switch (op) {\r\n                                            case 1:\r\n                                                tipo = TipoTransporte.BICICLETA;\r\n                                                break;\r\n                                            case 2:\r\n                                                tipo = TipoTransporte.MOTO;\r\n                                                break;\r\n                                            case 3:\r\n                                                tipo = TipoTransporte.MINIVAN;\r\n                                                break;\r\n                                            default:\r\n                                                throw new IllegalStateException(\"Unexpected value: \" + op);\r\n                                        }\r\n                                        System.out.println(\"\\tDigite el numero de cajas a llevar\");\r\n                                        Integer cajas = in.nextInt();\r\n                                        EnvioPrime enviotemp = new EnvioPrime(\"Envio Prime\", (double) precio, distancia, tipo, cajas);\r\n                                        servicios.add(enviotemp);\r\n                                    }\r\n                                }\r\n                            } while (opcion != 'N');\r\n                            Pedido nuevopedido;\r\n                            nuevopedido = new Pedido(fechaDespacho, repartidor, clientePedido, ProductoPedido);\r\n                            nuevopedido.setServiciosAdicionales(servicios);\r\n                            pantalla.centralDespacho.ReservarPedido(nuevopedido);\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (pantalla.centralDespacho.getGestionCliente().existeCliente(cedulaCliente) == null)\r\n                            System.out.println(\"\\t[!] El cliente no existe\");\r\n                        if (pantalla.centralDespacho.getGestionProductos().existeProducto(idProd) == null)\r\n                            System.out.println(\"\\t[!] El Producto no existe\");\r\n                    }\r\n                    break;\r\n                case 10:\r\n                    System.out.println(\"\\n\\tInserte el codigo del producto a modificar\");\r\n                    UUID idmodificar = pantalla.leerUUID();\r\n                    if (pantalla.centralDespacho.ExistePedido(idmodificar) != null) {\r\n                        pantalla.centralDespacho.ModificarPedido(idmodificar);\r\n                    } else\r\n                        System.out.println(\"\\t[!] el pedido a modificar no existe\");\r\n                    break;\r\n                case 11:\r\n                    System.out.println(\"\\tEliminar Pedido\");\r\n                    System.out.print(\"\\tDigite el numero del pedido que desea eliminar: \");\r\n                    UUID EliminarPed;\r\n                    EliminarPed = pantalla.leerUUID();\r\n                    pantalla.centralDespacho.EliminarPedido(EliminarPed);\r\n                case 12:\r\n                    pantalla.centralDespacho.VerPedido();\r\n                    break;\r\n                case 13:\r\n                    System.out.println(\"\\tInserte el codigo del producto\");\r\n                    UUID idProd2 = pantalla.leerUUID();\r\n                    if (pantalla.centralDespacho.getGestionProductos().existeProducto(idProd2) == null) {\r\n                        System.out.println(\"\\t[!] El producto no existe\");\r\n                    } else {\r\n                        System.out.println(\"\\tInserte el aÃ±o de la fecha especÃ­fica (AAAA)\");\r\n                        int anio = pantalla.leerEntero();\r\n                        System.out.println(\"\\tInserte el mes de la fecha especÃ­fica (MM)\");\r\n                        int mes = pantalla.leerEntero();\r\n                        System.out.println(\"\\tInserte el dia de la fecha especÃ­fica (DD)\");\r\n                        int dia = pantalla.leerEntero();\r\n                        Calendar fecha = Calendar.getInstance();\r\n                        fecha.set(anio, mes - 1, dia);\r\n                        pantalla.getCentralDespacho().verListadoDePedidosDeProductoYFechaEspecÃ­fica(idProd2,fecha);\r\n                    }\r\n                    break;\r\n                case 14:\r\n                    System.out.println(\"\\tDigite el numero del pedido del que quiere ver sus envios prime: \");\r\n                    UUID idped;\r\n                    idped = pantalla.leerUUID();\r\n                    Pedido pd = pantalla.centralDespacho.ExistePedido(idped);\r\n                    System.out.println(pd.getNombreRepartidor());\r\n                    System.out.println(\"\\tElige el tipo de envio a filtrar\");\r\n                    System.out.println(\"\\t1. Bicicleta\");\r\n                    System.out.println(\"\\t2. Moto\");\r\n                    System.out.println(\"\\t3. Minivan\");\r\n                    int op = pantalla.leerEntero();\r\n                    TipoTransporte tipo;\r\n                    switch (op) {\r\n                        case 1:\r\n                            tipo = TipoTransporte.BICICLETA;\r\n                            break;\r\n                        case 2:\r\n                            tipo = TipoTransporte.MOTO;\r\n                            break;\r\n                        case 3:\r\n                            tipo = TipoTransporte.MINIVAN;\r\n                            break;\r\n                        default:\r\n                            throw new IllegalStateException(\"Unexpected value: \" + op);\r\n                    }\r\n                    System.out.println(pd.enviosPrimePorTipo(tipo).toString());\r\n                    break;\r\n                case 15:\r\n                    Map<UUID, Producto> productosFruver = pantalla.getCentralDespacho().verProductosTipoFruver();\r\n                    if (productosFruver.size() != 0) {\r\n                        System.out.println(productosFruver.toString());\r\n                    } else {\r\n                        System.out.println(\"\\tNo hay productos de tipo fruver\");\r\n                    }\r\n                    break;\r\n                case 16:\r\n                    ArrayList<Pedido> pedidosAseo = pantalla.getCentralDespacho().verPedidosAsociadosAProductosAseo();\r\n                    if (pedidosAseo.size() != 0) {\r\n                        System.out.println(pedidosAseo.toString());\r\n                    } else {\r\n                        System.out.println(\"\\tNo hay productos de tipo fruver\");\r\n                    }\r\n                    break;\r\n                case 17:\r\n                    System.out.println(\"\\tElige el tipo de producto a filtrar\");\r\n                    System.out.println(\"\\t1. Hogar\");\r\n                    System.out.println(\"\\t2. Industrial\");\r\n                    System.out.println(\"\\t3. Hopitalario\");\r\n                    int opc = pantalla.leerEntero();\r\n                    TipoProducto tipo1;\r\n                    switch (opc) {\r\n                        case 1:\r\n                            tipo1 = TipoProducto.HOGAR;\r\n                            break;\r\n                        case 2:\r\n                            tipo1 = TipoProducto.INDUSTRIAL;\r\n                            break;\r\n                        case 3:\r\n                            tipo1 = TipoProducto.HOSPITALARIO;\r\n                            break;\r\n                        default:\r\n                            throw new IllegalStateException(\"Unexpected value: \" + opc);\r\n                    }\r\n                    if (pantalla.centralDespacho.precioPedidosDeAseoPorTipo(tipo1) != 0) {\r\n                        System.out.println(\"\\tEl precio de productos aseo de: \" + tipo1 + \"es:\" + pantalla.centralDespacho.precioPedidosDeAseoPorTipo(tipo1));\r\n                    } else {\r\n                        System.out.println(\"\\tNo existen producto de aseo de tipo: \" + tipo1);\r\n                    }\r\n                    break;\r\n                default:\r\n                    System.out.println(\"\\tDigite una opciÃ³n vÃ¡lida y vuelva a intentarlo\");\r\n                    break;\r\n            }\r\n        } while (opcion != 0);\r\n        System.out.println(\"fin\");\r\n    }\r\n\r\n    public ControlDespacho getCentralDespacho() {\r\n        return centralDespacho;\r\n    }\r\n\r\n    public Integer leerEntero() {\r\n        int numeroEntero = 0;\r\n        Scanner sc = new Scanner(System.in);\r\n        boolean valido = false;\r\n        do {\r\n            try {\r\n                numeroEntero = sc.nextInt();\r\n                valido = true;\r\n            } catch (InputMismatchException e) {\r\n                sc.nextLine();\r\n                System.out.print(\"\\t[!] Ingrese un valor entero: \");\r\n            }\r\n        } while (!valido);\r\n        return numeroEntero;\r\n    }\r\n\r\n    public Double leerDouble() {\r\n        Scanner sc = new Scanner(System.in);\r\n        Double numeroDouble = 0d;\r\n        boolean valido = false;\r\n        do {\r\n            try {\r\n                numeroDouble = sc.nextDouble();\r\n                valido = true;\r\n            } catch (InputMismatchException e) {\r\n                sc.nextLine();\r\n                System.out.print(\"\\t[!] Ingrese un valor entero: \");\r\n            }\r\n        } while (!valido);\r\n        return numeroDouble;\r\n    }\r\n\r\n    public String leerString() {\r\n        String str = \"\";\r\n        Scanner sc = new Scanner(System.in);\r\n        do {\r\n            str = sc.nextLine();\r\n        } while (str.isBlank());\r\n        return str;\r\n    }\r\n\r\n    public UUID leerUUID() {\r\n        Scanner sc = new Scanner(System.in);\r\n        boolean valido = false;\r\n        UUID key = null;\r\n        do {\r\n            try {\r\n                key = UUID.fromString(sc.nextLine());\r\n                valido = true;\r\n            } catch (Exception e) {\r\n                System.out.print(\"\\t[!] Ingrese un ID vÃ¡lido: \");\r\n            }\r\n        } while (!valido);\r\n        return key;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/PUJ/View/PantallaDespacho.java b/src/main/java/org/PUJ/View/PantallaDespacho.java
--- a/src/main/java/org/PUJ/View/PantallaDespacho.java	
+++ b/src/main/java/org/PUJ/View/PantallaDespacho.java	
@@ -35,9 +35,13 @@
         Pedido pedido1 = new Pedido(Calendar.getInstance(), "Camilo", cliente2, producto1);
         // 5 pedidos con servicios adicionales
         // - Dos con envio prime y uno con bonoregalo.
-        Pedido pedido2 = new Pedido(Calendar.getInstance(), "Juan", cliente1, producto1);
-        Pedido pedido3 = new Pedido(Calendar.getInstance(), "Miguel", cliente3, producto3);
-        Pedido pedido4 = new Pedido(Calendar.getInstance(), "Nicolas", cliente5, productoAseo1);
+        Calendar fecha2=Calendar.getInstance();
+        fecha2.set(2021,Calendar.JANUARY,15);
+        Calendar fecha3=fecha2;
+        fecha3.set(2021,Calendar.APRIL,24);
+        Pedido pedido2 = new Pedido(fecha2, "Juan", cliente1, producto1);
+        Pedido pedido3 = new Pedido(fecha3, "Miguel", cliente3, producto3);
+        Pedido pedido4 = new Pedido(Calendar.getInstance(), "Nicolas", cliente5, producto3);
         Pedido pedido5 = new Pedido(Calendar.getInstance(), "Sofia", cliente5, productoFruver1);
         Pedido pedido6 = new Pedido(Calendar.getInstance(), "Sara", cliente4, productoAseo3);
 
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"10d74ec7-bdf7-43a4-8c55-c9793e84c4e0\" name=\"Default Changelist\" comment=\"\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_25_04_2021_12_52_p__m___Default_Changelist_.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_25_04_2021_12_52_p__m___Default_Changelist_.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/org/PUJ/View/PantallaDespacho.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/org/PUJ/View/PantallaDespacho.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitSEFilterConfiguration\">\r\n    <file-type-list>\r\n      <filtered-out-file-type name=\"LOCAL_BRANCH\" />\r\n      <filtered-out-file-type name=\"REMOTE_BRANCH\" />\r\n      <filtered-out-file-type name=\"TAG\" />\r\n      <filtered-out-file-type name=\"COMMIT_BY_MESSAGE\" />\r\n    </file-type-list>\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"1rGGbNEKFgSvgyAxjHP5Ym9xP4X\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">\r\n    <property name=\"RunOnceActivity.OpenProjectViewOnStart\" value=\"true\" />\r\n    <property name=\"RunOnceActivity.ShowReadmeOnStart\" value=\"true\" />\r\n    <property name=\"SHARE_PROJECT_CONFIGURATION_FILES\" value=\"true\" />\r\n    <property name=\"last_opened_file_path\" value=\"$PROJECT_DIR$\" />\r\n    <property name=\"settings.editor.selected.configurable\" value=\"preferences.lookFeel\" />\r\n  </component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CreateClassDialog.RecentsKey\">\r\n      <recent name=\"org.PUJ.Model\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\" selected=\"JUnit.TestDespacho\">\r\n    <configuration name=\"PantallaDespacho\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"org.PUJ.View.PantallaDespacho\" />\r\n      <module name=\"Proyecto-POO\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"org.PUJ.View.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"TestDespacho\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"Proyecto-POO\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"org.PUJ.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"org.PUJ\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"org.PUJ.TestDespacho\" />\r\n      <option name=\"TEST_OBJECT\" value=\"class\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"JUnit.TestDespacho\" />\r\n        <item itemvalue=\"Application.PantallaDespacho\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"SvnConfiguration\">\r\n    <configuration>C:\\Users\\danie\\AppData\\Roaming\\Subversion</configuration>\r\n  </component>\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"10d74ec7-bdf7-43a4-8c55-c9793e84c4e0\" name=\"Default Changelist\" comment=\"\" />\r\n      <created>1618595086740</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1618595086740</updated>\r\n    </task>\r\n    <servers />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n    <option name=\"oldMeFiltersMigrated\" value=\"true\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	
+++ b/.idea/workspace.xml	
@@ -5,8 +5,8 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="10d74ec7-bdf7-43a4-8c55-c9793e84c4e0" name="Default Changelist" comment="">
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_25_04_2021_12_52_p__m___Default_Changelist_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_25_04_2021_12_52_p__m___Default_Changelist_.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/PUJ/Control/ControlDespacho.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/PUJ/Control/ControlDespacho.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/org/PUJ/View/PantallaDespacho.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/PUJ/View/PantallaDespacho.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
@@ -49,7 +49,7 @@
       <recent name="org.PUJ.Model" />
     </key>
   </component>
-  <component name="RunManager" selected="JUnit.TestDespacho">
+  <component name="RunManager" selected="Application.PantallaDespacho">
     <configuration name="PantallaDespacho" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
       <option name="MAIN_CLASS_NAME" value="org.PUJ.View.PantallaDespacho" />
       <module name="Proyecto-POO" />
@@ -80,8 +80,8 @@
     </configuration>
     <recent_temporary>
       <list>
-        <item itemvalue="JUnit.TestDespacho" />
         <item itemvalue="Application.PantallaDespacho" />
+        <item itemvalue="JUnit.TestDespacho" />
       </list>
     </recent_temporary>
   </component>
